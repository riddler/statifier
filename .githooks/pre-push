#!/bin/bash

# Git pre-push hook to run validation pipeline
# This prevents pushing code that fails known tests or linting

set -e

echo "🔍 Running pre-push validation pipeline..."

# Run formatting check
echo "📝 Checking code formatting..."
if ! mix format --check-formatted; then
    echo "❌ Code formatting issues found. Running 'mix format' to fix..."
    mix format
    
    # Check if files were actually changed by formatting
    if ! git diff --quiet; then
        echo "📝 Code has been automatically formatted."
        echo "🔄 Please commit the formatting changes and push again:"
        echo "   git add ."
        echo "   git commit -m 'Auto-format code with mix format'"
        echo "   git push"
        exit 1
    else
        echo "✅ No files needed formatting changes."
    fi
fi

# Check for markdown files and lint them if markdownlint-cli2 is available
if command -v markdownlint-cli2 >/dev/null 2>&1; then
    # Check if any .md files are in the repository
    if find . -name "*.md" -not -path "./deps/*" -not -path "./_build/*" | head -1 | grep -q .; then
        echo "📋 Checking markdown formatting..."
        # Get list of project markdown files (excluding deps and _build)
        md_files=$(find . -name "*.md" -not -path "./deps/*" -not -path "./_build/*")
        if ! echo "$md_files" | xargs markdownlint-cli2 --config .markdownlint.json 2>/dev/null; then
            echo "❌ Markdown linting failed!"
            echo "💡 Fix markdown issues manually or run:"
            echo "   find . -name \"*.md\" -not -path \"./deps/*\" -not -path \"./_build/*\" | xargs markdownlint-cli2 --config .markdownlint.json --fix"
            echo "💡 Install markdownlint-cli2 with: npm install -g markdownlint-cli2"
            exit 1
        fi
        echo "✅ Markdown formatting looks good"
    fi
else
    # Check if any .md files exist to give helpful message
    if find . -name "*.md" -not -path "./deps/*" -not -path "./_build/*" | head -1 | grep -q .; then
        echo "ℹ️  markdownlint-cli2 not found - skipping markdown linting"
        echo "💡 Install with: npm install -g markdownlint-cli2"
        echo "💡 Or run manually: find . -name \"*.md\" -not -path \"./deps/*\" -not -path \"./_build/*\" | xargs markdownlint-cli2"
    fi
fi

# Run regression tests (critical - these should never break)
echo "🧪 Running regression tests..."
if ! mix test.regression; then
    echo "❌ Regression tests failed. These tests should always pass!"
    exit 1
fi

# Run static analysis
echo "🔍 Running static analysis (Credo)..."
if ! mix credo --strict; then
    echo "❌ Credo analysis failed. Fix issues before pushing."
    exit 1
fi

# Run type checking (optional - can be slow)
# Uncomment if you want type checking in the pre-push hook
# echo "🔬 Running type checking (Dialyzer)..."
# if ! mix dialyzer; then
#     echo "❌ Dialyzer type checking failed."
#     exit 1
# fi

echo "✅ All validation checks passed! Ready to push."
