#!/usr/bin/env bash

set -u # raise an error on use of uninitialized variable
set -e # exit after the first error

# This file is used to setup the local development environment


# Bring in functions to aid in setting up the development environment
source "$(dirname -- "$0")/utils/setup.sh"

# ------------------------------------------------------------------------
# Install system dependencies
# ------------------------------------------------------------------------

export OQ_VERSION="1.0.2"


# Setup ASDF version manager and install deps
setup_asdf() {
  local prefix="[ASDF]"

  _info_banner "${prefix} Setting up"

  # Version manager for multiple languages
  _prompt_for_command_install "asdf"

  _info_message "Installing/Updating ASDF dependencies"
  (asdf install && _success_message "${prefix} Success: dependencies up to date") || \
    _error_message "${prefix} Failed to update dependencies"
}

# Setup Ruby dependencies (used for Danger and generating templated specs)
setup_ruby() {
  local prefix="[Ruby]"

  _info_banner "${prefix} Setting up"

  _info_message "${prefix} Installing/Updating RubyGems"
  (bundle install && _success_message "${prefix} Success: RubyGems up to date") || \
    _error_message "${prefix} Failed to update RubyGems"
}

_elixir_update() {
  local subpath="${1?}"
  local prefix="[${subpath}]"

  _info_banner "${prefix} Updating Elixir dependencies"

  pushd "${subpath}" 1>/dev/null
  # shellcheck disable=SC1010
  mix do deps.get, compile
  popd 1>/dev/null

  _success_message "${prefix} Success: Elixir dependencies up to date"
}

# Setup dependencies for statifier-ex
setup_statifier_ex() {
  _elixir_update statifier-ex
}

# Setup dependencies for Spec
setup_spec() {
  _elixir_update spec

  # # Working with YAML, XML and JSON files
  # _prompt_for_oq_install
}


# Setup entire project. First global dependencies, then each package.
setup_project() {
  _info_banner "Setting up Statifier"

  # Global Setup
  setup_asdf
  setup_ruby

  # Package specific
  setup_spec
  setup_statifier_ex

  _success_banner "Project successfully setup"
}

case "${1-}" in
  "-y")
    yes | setup_project
    ;;

  *)
    setup_project
    ;;
esac
